// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Work {
  id             Int      @id @default(autoincrement())
  tag            String   @unique
  image          String
  title          String
  title_headline String
  badge_date     DateTime
  description    String
  stack          String?
  crm            String?
  website        String
  blogpost       String?
  android_link   String?
  ios_link       String?
  feature        String
  work_img_1     String?
  work_img_2     String?
  work_img_3     String?
  work_img_4     String?
  work_img_5     String?
  work_img_6     String?
  work_img_7     String?
  work_img_8     String?
  work_img_9     String?
  work_img_10    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
